{"version":3,"file":"insert-soft-hyphen.tiptap-api-CCpKYRc2.js","sources":["../../TiptapExtension/src/insert-soft-hyphen.tiptap-api.ts"],"sourcesContent":["import { UmbTiptapExtensionApiBase } from '@umbraco-cms/backoffice/tiptap';\r\n\r\nexport default class UmbTiptapSoftHyphenExtensionApi extends UmbTiptapExtensionApiBase {\r\n    // Override the getTiptapExtensions method if you need to provide specific extensions\r\n    getTiptapExtensions = () => [];\r\n\r\n    // Method to dynamically add buttons to the action bar\r\n    addCustomButtonsToActionBar() {\r\n        // Use setInterval to wait until the action bar becomes visible\r\n        const interval = setInterval(() => {\r\n            const actionBar = document.querySelector('uui-action-bar'); // Target <uui-action-bar> based on the provided HTML\r\n\r\n            if (actionBar) {\r\n                // Ensure that the action bar is available before proceeding\r\n                clearInterval(interval); // Stop the interval once the action bar is found\r\n\r\n                // Create and add a new button\r\n                const newButton = document.createElement('uui-button');\r\n                newButton.setAttribute('label', 'New Custom Button');\r\n                newButton.setAttribute('look', 'secondary');\r\n                newButton.setAttribute('type', 'button');\r\n                const icon = document.createElement('uui-icon');\r\n                icon.setAttribute('name', 'icon-plus'); // You can replace with any icon\r\n                newButton.appendChild(icon);\r\n\r\n                // Add event listener to the new button\r\n                newButton.addEventListener('click', () => {\r\n                    alert('New Custom Button Clicked');\r\n                });\r\n\r\n                // Append the new button to the action bar\r\n                actionBar.appendChild(newButton);\r\n\r\n                // You can add more buttons similarly\r\n                const anotherButton = document.createElement('uui-button');\r\n                anotherButton.setAttribute('label', 'Another Button');\r\n                anotherButton.setAttribute('look', 'secondary');\r\n                anotherButton.setAttribute('type', 'button');\r\n                const anotherIcon = document.createElement('uui-icon');\r\n                anotherIcon.setAttribute('name', 'icon-check');\r\n                anotherButton.appendChild(anotherIcon);\r\n                anotherButton.addEventListener('click', () => {\r\n                    alert('Another Button Clicked');\r\n                });\r\n                actionBar.appendChild(anotherButton);\r\n            }\r\n        }, 1000); // Check every 100ms until the action bar is available\r\n    }\r\n\r\n    constructor(host:any) {\r\n        // Call the superclass constructor with the host\r\n        super(host);\r\n\r\n        // Immediately call the method to add buttons to the action bar after initialization\r\n            this.addCustomButtonsToActionBar();\r\n\r\n    }\r\n\r\n}\r\n"],"names":["UmbTiptapSoftHyphenExtensionApi","UmbTiptapExtensionApiBase","host","interval","actionBar","newButton","icon","anotherButton","anotherIcon"],"mappings":";AAEA,MAAqBA,UAAwCC,EAA0B;AAAA,EA+CnF,YAAYC,GAAU;AAElB,UAAMA,CAAI,GA/Cd,KAAA,sBAAsB,MAAM,CAAC,GAkDrB,KAAK,4BAA4B;AAAA,EAAA;AAAA;AAAA,EA/CzC,8BAA8B;AAEpB,UAAAC,IAAW,YAAY,MAAM;AACzB,YAAAC,IAAY,SAAS,cAAc,gBAAgB;AAEzD,UAAIA,GAAW;AAEX,sBAAcD,CAAQ;AAGhB,cAAAE,IAAY,SAAS,cAAc,YAAY;AAC3C,QAAAA,EAAA,aAAa,SAAS,mBAAmB,GACzCA,EAAA,aAAa,QAAQ,WAAW,GAChCA,EAAA,aAAa,QAAQ,QAAQ;AACjC,cAAAC,IAAO,SAAS,cAAc,UAAU;AACzC,QAAAA,EAAA,aAAa,QAAQ,WAAW,GACrCD,EAAU,YAAYC,CAAI,GAGhBD,EAAA,iBAAiB,SAAS,MAAM;AACtC,gBAAM,2BAA2B;AAAA,QAAA,CACpC,GAGDD,EAAU,YAAYC,CAAS;AAGzB,cAAAE,IAAgB,SAAS,cAAc,YAAY;AAC3C,QAAAA,EAAA,aAAa,SAAS,gBAAgB,GACtCA,EAAA,aAAa,QAAQ,WAAW,GAChCA,EAAA,aAAa,QAAQ,QAAQ;AACrC,cAAAC,IAAc,SAAS,cAAc,UAAU;AACzC,QAAAA,EAAA,aAAa,QAAQ,YAAY,GAC7CD,EAAc,YAAYC,CAAW,GACvBD,EAAA,iBAAiB,SAAS,MAAM;AAC1C,gBAAM,wBAAwB;AAAA,QAAA,CACjC,GACDH,EAAU,YAAYG,CAAa;AAAA,MAAA;AAAA,OAExC,GAAI;AAAA,EAAA;AAYf;"}